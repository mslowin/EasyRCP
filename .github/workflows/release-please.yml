name: Release Please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: simple
          token: ${{ secrets.PAT_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          
  build-and-upload:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Get Chrome version
        id: get-chrome-version
        run: |
          $chromeVersion = & "C:\Program Files\Google\Chrome\Application\chrome.exe" --version
          $version = $chromeVersion -replace 'Google Chrome ', '' -replace '^(\d+\.\d+\.\d+)\..*', '$1'
          echo "Chrome version: $version"
          echo "CHROME_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Download matching ChromeDriver
        run: |
          $version = $env:CHROME_VERSION
          $metaUrl = "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json"
          $meta = Invoke-RestMethod -Uri $metaUrl
          $driverUrl = $meta.channels.Stable.downloads.chromedriver | Where-Object { $_.platform -eq "win64" -and $_.version -like "$version*" } | Select-Object -First 1 -ExpandProperty url

          if (-not $driverUrl) {
            Write-Error "No matching ChromeDriver found for Chrome version $version"
            exit 1
          }

          echo "Downloading ChromeDriver from $driverUrl"
          Invoke-WebRequest -Uri $driverUrl -OutFile "chromedriver.zip"
          Expand-Archive -Path "chromedriver.zip" -DestinationPath "."
          Copy-Item ".\chromedriver-win64\chromedriver.exe" -Destination "chromedriver.exe"
          Remove-Item "chromedriver.zip"
          Remove-Item "chromedriver-win64" -Recurse
        shell: pwsh

      - name: Build app (self-contained)
        run: dotnet publish EasyRCP.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o publish
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: publish/*.exe
          tag_name: ${{ needs.release-please.outputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
